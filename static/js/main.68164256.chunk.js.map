{"version":3,"sources":["components/CompareTable.js","components/Table.js","App.js","index.js"],"names":["style","table","width","CompareTable","props","dates","useState","keywords","setKeywords","apps","setApps","useEffect","firstDate","forEach","name","text","alreadyHasApp","find","app","alreadyHasKeyword","key","push","dark","map","keyword","i","secondDate","initialValue","position","finalValue","diff","parseInt","diffLabel","cell","cursor","Table","setFirstDate","setSecondDate","data","setDates","isFirstDateChecked","date","isSecondDateChecked","info","onClick","setDate","scope","formattedDate","isDateChecked","URL","App","setData","a","fetch","response","json","parsedData","getData","ReactDOM","render","document","getElementById"],"mappings":"2NAGMA,EAAQ,CACZC,MAAO,CACLC,MAAO,QAII,SAASC,EAAaC,GAAQ,IACnCC,EAAUD,EAAVC,MADkC,EAEVC,mBAAS,IAFC,mBAEnCC,EAFmC,KAEzBC,EAFyB,OAGlBF,mBAAS,IAHS,mBAGnCG,EAHmC,KAG7BC,EAH6B,KAiC1C,OA5BAC,qBAAU,WAAO,IACRC,EADO,YACMP,EADN,MAEVI,EAAO,GACPF,EAAW,GAEf,OAAKK,GAMAA,EAAUL,UAMfK,EAAUL,SAASM,SAAQ,YAAqB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5BC,EAAgBP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,IAAQJ,KACzCK,EAAoBZ,EAASU,MAAK,SAAAG,GAAG,OAAIA,IAAQL,KAClDC,GAAeP,EAAKY,KAAKP,GACzBK,GAAmBZ,EAASc,KAAKN,MAGxCL,EAAQD,QACRD,EAAYD,KAnBVG,EAAQD,QACRD,EAAYD,MAmBb,CAACF,IAGF,kBAAC,IAAD,CAASiB,MAAI,EAACtB,MAAOA,EAAMC,OACzB,+BACE,4BACE,iCACCQ,EAAKc,KAAI,SAAAL,GAAG,OACX,wBAAIE,IAAKF,GAAMA,QAIrB,+BACGX,EAASgB,KAAI,SAAAC,GAAO,OACnB,wBAAIJ,IAAKI,GACP,4BAAKA,GACJf,EAAKc,KAAI,SAACL,EAAKO,GAAO,IAAD,cACYpB,EADZ,GACbO,EADa,KACFc,EADE,KAEpB,IAAKd,EAAW,OAAO,KACvB,IAAKA,EAAUL,SAAU,OAAO,KAHZ,IAKFoB,EAAiBf,EAAUL,SAASU,MACpD,gBAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OAAoBD,IAASI,GAAOH,IAASS,KADvCI,SAGR,IAAKD,EAAc,OAAO,wBAAIP,IAAKK,GAAT,MAE1B,IAAKC,EAAY,OAAO,wBAAIN,IAAKK,GAAIE,GACrC,IAAKD,EAAWnB,SAAU,OAAO,wBAAIa,IAAKK,GAAIE,GAX1B,IAaFE,EAAeH,EAAWnB,SAASU,MACnD,gBAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OAAoBD,IAASI,GAAOH,IAASS,KADvCI,SAIFE,EACJC,SAASF,EAAY,IAAME,SAASJ,EAAc,IAC9CK,EACJF,EAAO,EAAP,iBAAgBA,GAASA,EAAO,EAAP,iBAAgBA,GAAS,GAEpD,OACE,wBAAIV,IAAKK,GACNE,EADH,IACkBK,YC7ElC,IAAMhC,EAAQ,CACZC,MAAO,CACLC,MAAO,OAET+B,KAAM,CACJC,OAAQ,YAIG,SAASC,EAAM/B,GAAQ,IAAD,EACDE,mBAAS,IADR,mBAC5BM,EAD4B,KACjBwB,EADiB,OAEC9B,mBAAS,IAFV,mBAE5BoB,EAF4B,KAEhBW,EAFgB,KAG3BC,EAAmBlC,EAAnBkC,KAAMC,EAAanC,EAAbmC,SA2Bd,SAASC,EAAT,GACE,OADoC,EAARC,OACZ7B,EAAU6B,KAG5B,SAASC,EAAT,GACE,OADqC,EAARD,OACbf,EAAWe,KAO7B,OArCA9B,qBAAU,WACR,IAAMN,EAAQ,GACVO,EAAU6B,KAAOf,EAAWe,MAC9BpC,EAAMgB,KAAKT,GACXP,EAAMgB,KAAKK,KAEXrB,EAAMgB,KAAKK,GACXrB,EAAMgB,KAAKT,IAEb2B,EAASlC,KACR,CAACO,EAAWc,IA4Bb,kBAAC,IAAD,CAASJ,MAAI,EAACtB,MAAOA,EAAMC,OACzB,+BACE,4BACE,iCACA,wBAAIC,MAAM,OAAV,UAGJ,+BACGoC,EAAKf,KAAI,SAACoB,EAAMlB,GAAP,OACR,wBAAIL,IAAKK,EAAGzB,MAAOA,EAAMiC,KAAMW,QAAS,kBAnChD,SAAiBD,GACXH,EAAmBG,GACrBP,EAAa,IAGXM,EAAoBC,GACtBN,EAAc,IAIhBzB,EAAU6B,KAAOJ,EAAcM,GAAQP,EAAaO,GAyBAE,CAAQF,KACpD,wBAAIG,MAAM,OAAOrB,EAAI,GACrB,4BACGkB,EAAKI,cADR,IAhBV,SAAuBJ,GACrB,OAAOH,EAAmBG,IAASD,EAAoBC,GAAQ,MAAQ,GAgBvCK,CAAcL,UC/DlD,IAAMM,EAAM,mDAyBGC,MAvBf,WAAgB,IAAD,EACW5C,mBAAS,IADpB,mBACNgC,EADM,KACAa,EADA,OAEa7C,mBAAS,IAFtB,mBAEND,EAFM,KAECkC,EAFD,iDAQb,8BAAAa,EAAA,sEACyBC,MAAMJ,GAD/B,cACQK,EADR,gBAE2BA,EAASC,OAFpC,OAEQC,EAFR,OAIEL,EAAQK,GAJV,4CARa,sBAeb,OAXA7C,qBAAU,YAJG,mCAKX8C,KACC,IAUD,oCACE,kBAAC,EAAD,CAAOnB,KAAMA,EAAMC,SAAUA,IAC7B,kBAACpC,EAAD,CAAcE,MAAOA,MClB3BqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.68164256.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table as RSTable } from 'reactstrap';\n\nconst style = {\n  table: {\n    width: '50%'\n  }\n};\n\nexport default function CompareTable(props) {\n  const { dates } = props;\n  const [keywords, setKeywords] = useState([]);\n  const [apps, setApps] = useState([]);\n\n  useEffect(() => {\n    const [firstDate] = dates;\n    let apps = [];\n    let keywords = [];\n\n    if (!firstDate) {\n      setApps(apps);\n      setKeywords(keywords);\n      return;\n    }\n\n    if (!firstDate.keywords) {\n      setApps(apps);\n      setKeywords(keywords);\n      return;\n    }\n\n    firstDate.keywords.forEach(({ name, text }) => {\n      const alreadyHasApp = apps.find(app => app === name);\n      const alreadyHasKeyword = keywords.find(key => key === text);\n      if (!alreadyHasApp) apps.push(name);\n      if (!alreadyHasKeyword) keywords.push(text);\n    });\n\n    setApps(apps);\n    setKeywords(keywords);\n  }, [dates]);\n\n  return (\n    <RSTable dark style={style.table}>\n      <thead>\n        <tr>\n          <th>#</th>\n          {apps.map(app => (\n            <th key={app}>{app}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {keywords.map(keyword => (\n          <tr key={keyword}>\n            <td>{keyword}</td>\n            {apps.map((app, i) => {\n              const [firstDate, secondDate] = dates;\n              if (!firstDate) return null;\n              if (!firstDate.keywords) return null;\n\n              const { position: initialValue } = firstDate.keywords.find(\n                ({ name, text }) => name === app && text === keyword\n              );\n              if (!initialValue) return <td key={i}> -</td>;\n\n              if (!secondDate) return <td key={i}>{initialValue}</td>;\n              if (!secondDate.keywords) return <td key={i}>{initialValue}</td>;\n\n              const { position: finalValue } = secondDate.keywords.find(\n                ({ name, text }) => name === app && text === keyword\n              );\n\n              const diff =\n                parseInt(finalValue, 10) - parseInt(initialValue, 10);\n              const diffLabel =\n                diff > 0 ? `↑ ${diff}` : diff < 0 ? `↓ ${diff}` : '';\n\n              return (\n                <td key={i}>\n                  {initialValue} {diffLabel}\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </tbody>\n    </RSTable>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Table as RSTable } from 'reactstrap';\n\nconst style = {\n  table: {\n    width: '50%'\n  },\n  cell: {\n    cursor: 'pointer'\n  }\n};\n\nexport default function Table(props) {\n  const [firstDate, setFirstDate] = useState({});\n  const [secondDate, setSecondDate] = useState({});\n  const { data, setDates } = props;\n\n  useEffect(() => {\n    const dates = [];\n    if (firstDate.date > secondDate.date) {\n      dates.push(firstDate);\n      dates.push(secondDate);\n    } else {\n      dates.push(secondDate);\n      dates.push(firstDate);\n    }\n    setDates(dates);\n  }, [firstDate, secondDate]);\n\n  function setDate(info) {\n    if (isFirstDateChecked(info)) {\n      setFirstDate({});\n      return;\n    }\n    if (isSecondDateChecked(info)) {\n      setSecondDate({});\n      return;\n    }\n\n    firstDate.date ? setSecondDate(info) : setFirstDate(info);\n  }\n\n  function isFirstDateChecked({ date }) {\n    return date === firstDate.date;\n  }\n\n  function isSecondDateChecked({ date }) {\n    return date === secondDate.date;\n  }\n\n  function isDateChecked(info) {\n    return isFirstDateChecked(info) || isSecondDateChecked(info) ? '- X' : '';\n  }\n\n  return (\n    <RSTable dark style={style.table}>\n      <thead>\n        <tr>\n          <th>#</th>\n          <th width=\"70%\">Data</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((info, i) => (\n          <tr key={i} style={style.cell} onClick={() => setDate(info)}>\n            <th scope=\"row\">{i + 1}</th>\n            <td>\n              {info.formattedDate} {isDateChecked(info)}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </RSTable>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { CompareTable, Table } from './components';\n\nconst URL = 'https://www.mocky.io/v2/5a880f353000004f007f93c5';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [dates, setDates] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    const response = await fetch(URL);\n    const parsedData = await response.json();\n\n    setData(parsedData);\n  }\n\n  return (\n    <>\n      <Table data={data} setDates={setDates} />\n      <CompareTable dates={dates} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}